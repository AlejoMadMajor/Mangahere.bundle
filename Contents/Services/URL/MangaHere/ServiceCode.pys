#!/usr/bin/env python

"""MangaHere Service code - Want it to gather all info on Manga and retrieve image urls."""

####################################################################################################
def NormalizeURL(url):
    """This function should return a 'normalised' version of the given URL. Plex uses the URL"""

    return url

####################################################################################################
def MetadataObjectForURL(url):
    """
    This function should create and return a metadata object (for example, a VideoClipOb-
    ject) and populate it with metadata from the given URL. Only the metadata should be
    added here - the object's key and rating_key properties will be synthesised based on the URL.
    """

    html = HTML.ElementFromURL(url)

    title = html.xpath('//section[@class="readpage_top"]/div[@class="title"]//a/text()')[0].strip()

    return PhotoAlbumObject(title=title)

####################################################################################################
def MediaObjectsForURL(url):
    """
    This function should create and return a list of media objects and part objects representing
    the media available at the given URL. Callbacks may be used if obtaining the final media
    location requires additional computation.
    """

    return [MediaObject(parts=Callback(GetPhotos, url=url))]

####################################################################################################
def GetPhotos(url):
    """
    This function pulls down all the image urls for a chapter and adds them to the
    'PhotoObject' container.
    """

    html = HTML.ElementFromURL(url)

    node = html.xpath('//select[@class="wid60"]')[0]
    page_list = node.xpath('./option/@value')
    chapter_title = html.xpath('//section[@class="readpage_top"]/div[@class="title"]//a/text()')[0].strip()

    oc = ObjectContainer(title1='MangaHere', title2=chapter_title)

    for i, page_url in enumerate(page_list):
        if i == 0:
            img_url = html.xpath('//section[@id="viewer"]/a/img[@onload]')[0].get('src').split('?')[0].strip()
        else:
            sub_html = HTML.ElementFromURL(page_url)
            img_url = sub_html.xpath('//section[@id="viewer"]/a/img[@onload]')[0].get('src').split('?')[0].strip()

        title = str(i + 1)

        Log.Debug('*' * 80)
        Log.Debug('* %s | %s' %(img_url, title))
        Log.Debug('*' * 80)

        oc.add(
            PhotoObject(
                key=img_url,
                title=title.strip(),
                thumb=img_url
            ))

    return oc
