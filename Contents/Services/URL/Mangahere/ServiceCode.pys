RE_PAGES = Regex("total_pages = (\d+)")
#RE_IMAGE_URL = Regex("<img src=\"([^']*)\?")

####################################################################################################
def NormalizeURL(url):

  return url

####################################################################################################
def MetadataObjectForURL(url):

	album = PhotoAlbumObject(key=Callback(GetPhotos, url=url))
	return album

def GetPhotos(url):
	oc = ObjectContainer()

	raw = HTTP.Request(url).content
	pages = int(RE_PAGES.search(raw).group(1))
	token = url.rsplit('/', 1)
	for page in range(1, pages+1):
		page_url = token[0] + '/%d.html' % page
		raw = HTML.ElementFromURL(page_url)
		img_url = raw.xpath('//section[@class="read_img"]/a/img')[0].get('src').split('?')[0]
		oc.add(PhotoObject(key=img_url, title=str(page), thumb=None))

	return oc

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			parts = Callback(GetPhotos, url=url)
		)
	]
